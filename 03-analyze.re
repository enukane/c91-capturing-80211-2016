= イベント会場での観測

本章では、これまで解説してきたキャプチャ箱を実際に持ち込んで観測していたイベント
のキャプチャデータを眺めてみます。

== 観測環境

ここでは、これまでに収集した中から以下の3つの環境でのキャプチャデータを扱います。

  1. コミックマーケット C90 3日目 (2016/08/14)
  2. 某技術カンファレンス (2016秋)
  3. 某オフィス環境 (2016/12)


それぞれの環境の差異については @<table>{table_event_compare} にて比較しています。
コミケ会場は、この中で最もエリア内人数が多く、このためにスマホなどの端末も
多いと予想され Wi-Fi 環境としても混雑していると思われるイベントです。
技術カンファレンスは、コミケほどではないにしろ一定のエリア内に
そこそこの人数が集まり、カンファレンス主催者から提供された
Wi-Fi があるものでした。
オフィス環境は、比較的かっちりと設計&整備された安定した環境の
前述の2環境との対比や共通項を見つけることを目的として挙げています。

//table[table_event_compare][環境・イベントの性質の違い]{
イベント名	C90 3日目				某技術イベント			某オフィス
------------
会場環境	ビッグサイト(西4ホール)			コンベンションホール		オフィスフロア
エリア通過人数	21万人@<fn>{fn_c90_afterreport}	500人以上程度			????
既設Wi-Fi環境	会場提供、キャリアオフロード用		イベント主催者提供		業務利用向け
Wi-Fi利用	3G/LTEの代わり、テザリング		PC/スマホでWeb, SNS 閲覧	業務
参加者層	一般					エンジニア			社員
移動		ホール間・内移動			定期的に部屋間移動		多数は固定
滞在時間	ばらばらに来場・退場			来場・退場は大多数が同じ	ほぼ同じ
//}

//footnote[fn_c90_afterreport][コミックマーケット90アフターレポート http://www.comiket.co.jp/info-a/C90/C90AfterReport.html]


これらの環境では、キャプチャ箱を持ち運ばず定点観測を行っています。
それぞれキャプチャ箱は、C90 3日はサークル参加のためビッグサイト西 f-49a の自スペースにて机の上に置き、
某技術カンファレンスとオフィス環境では鞄の中に入れたままで運用しました。


== キャプチャデータの分析

=== 基本情報

各キャプチャデータのファイルサイズや観測時間などの基本的な情報は @<table>{table_basic_info}
に記載の通りです。

//table[table_basic_info][キャプチャデータ: 基本情報の比較]{
イベント名	C90 3日目	某技術イベント		某オフィス
------------
観測期間	09:09 - 14:46	12:58 - 18:20		11:19 - 17:59
観測時間	5h 36m 55s	5h 21m 47s		6h 39m 26s
ファイルサイズ	939 MB		1158 MB			1122 MB
フレーム数	3,386,754	4,253,475		4,434,615
バイト/秒	48 K		63 K			49 K
フレーム/秒	168		220			185
//}


=== 端末情報

それぞれの環境におけるユニーク端末数を比較したものを @<table>{table_sta_num} に記載します。
この表中の@<strong>{ユニークAP数}は、Beacon または Probe Response フレームの送信アドレスの
ユニーク数を取ったものです。これによりアクセスポイント数の計上を目的としています。
同様に@<strong>{ユニーク端末数}は全てのフレームについて送信アドレス
に加えて受信アドレスを収集した値となっています。

//table[table_sta_num][端末数の比較]{
イベント名		C90 3日目	某技術イベント		某オフィス
------------
ユニークAP数		2,730		318			390
(2.4GHz帯のAP数)	2,217		184			171
(5GHzのAP数)		275		59			10
ユニーク端末数		86,461		13,339			8,648
(2.4/5GHz帯両方)	12,811		3,567			1,835
//}

==== アクセスポイント

チャネルごとのAP数をプロットすると、@<img>{c90-d3/channel_ap_histogram}, @<img>{conf2016/channel_ap_histogram},
@<img>{office2016/channel_ap_histogram} の分布となります。
ここではキャプチャしたフレームの受信電波強度については考慮せず、正しく受信出来たフレーム全てについて
プロットした図になります。とはいえ、移動せず定点でキャプチャしてるだけでもこれだけの数が見えます。

//image[c90-d3/channel_ap_histogram][C90 3日目: チャネル毎のAP数 (x=チャネル, y=AP数)][scale=0.6]
//image[conf2016/channel_ap_histogram][カンファレンス: チャネル毎のAP数 (x=チャネル, y=AP数)][scale=0.6]
//image[office2016/channel_ap_histogram][オフィス: チャネル毎のAP数 (x=チャネル, y=AP数)][scale=0.6]

2.4 GHz 帯では定石の 1, 6, 11 チャネルに集中しているのが見て取れます。
ただし間のチャネルにも相当数のAPが存在し、相互に干渉がひどそうなことがうかがえます。
5GHz 帯の AP 数は、オフィス環境を除けば 2.4 GHz帯のそれにだいぶ大差をつけられています。


それぞれAPのOUIからデバイスのベンダを逆引きし、トップ10についてその数をプロットしたものを
@<img>{c90-d3/uniq_ap_oui_histogram_10}, @<img>{conf2016/uniq_ap_oui_histogram_10}, @<img>{office2016/uniq_ap_oui_histogram_10}
に記載します(一部マスク)。


//image[c90-d3/uniq_ap_oui_histogram_10][C90 3日目: APのユニークOUI数 (x=ベンダ名, y=AP数)][scale=0.6]
//image[conf2016/uniq_ap_oui_histogram_10][カンファレンス: APのユニークOUI数 (x=ベンダ名, y=AP数)][scale=0.6]
//image[office2016/uniq_ap_oui_histogram_10][オフィス: APのユニークOUI数 (x=ベンダ名, y=AP数)][scale=0.6]

全体的に C90 で見える数が桁一つ違うのはさておき、C90 とカンファレンスでは
モバイル端末ベンダの名前が多く並んでいるのが見て取れます。
Huawei を筆頭が飛び抜けて多く、NEC Platforms (Atermシリーズ?) や Intel、ZTE、LG などがこれに続きます。
既設系の AP としては3環境とも Cisco が目立ちます。


C90 を対象に 2.4GHz 帯と 5GHz 帯で内訳を出したものが @<img>{c90-d3/uniq_ap_oui_24_histogram_10} と
@<img>{c90-d3/uniq_ap_oui_5_histogram_10} になります。
見事に二分化されており、来場者が持ち込んだモバイル端末とおぼしきOUIはほとんどが 2.4GHz 帯に偏っており、
既設系は 5GHz 帯に集中しています。2.4 GHz 帯ではもはや真っ当にサーヴできないと踏んでサポートを切っているようです。
まだ 5GHz でのテザリングをサポートしているデバイスはそこまで多くないのか、こちらの帯域では
まだまだ数十個程度と既設のSSID数を超えるようなことは生じていません。
ただし ZTE, Huawei, NEC Platforms と着実に対応してきているようです。
今後、5GHz 帯も 2.4GHz 帯のような悲惨な状況にならないか不安ではあります。

//image[c90-d3/uniq_ap_oui_24_histogram_10][C90 3日目: 2.4GHz帯 APのユニークOUI数 (x=ベンダ名, y=AP数)][scale=0.6]
//image[c90-d3/uniq_ap_oui_5_histogram_10][C90 3日目: 5GHz帯 APのユニークOUI数 (x=ベンダ名, y=AP数)][scale=0.6]


AP の移動について見るために、APの生存時間のヒストグラムを
@<img>{c90-d3/ap_recognized_span}, @<img>{conf2016/ap_recognized_span}, @<img>{office2016/ap_recognized_span}
に載せています。正確には、最初にそのアドレスから送信された最初のBeaconまたはProbe Responseの時刻から最後に
フレームまでの時刻の差分をプロットしたものになります。間で中抜けした、というような事象についてはここでは考慮していません。
コミケのように来場者が会場間を行き来したりばらばらと集散を繰り返す環境と、カンファレンスやオフィスのように
一定時間は動かないことが想定される環境の違いがあるのかどうかを見てみます。

C90 はダントツに0秒近辺が多く、そこから5000秒(1時間半弱)あたりに掛けてなだらかに落ちていきます。
オフィス環境は右端に著しく偏っており、わかりやすく移動がない(または戻ってきている)のが見て取れます。

//image[c90-d3/ap_recognized_span][C90 3日目: AP の生存期間 (x=秒, y=AP数)][scale=0.6]
//image[conf2016/ap_recognized_span][カンファレンス: AP の生存期間 (x=秒, y=AP数)][scale=0.6]
//image[office2016/ap_recognized_span][オフィス: AP の生存期間 (x=秒, y=AP数)][scale=0.6]


==== クライアント端末

前節までは AP のみを見ていましたがここでは、APでない無線LANクライアント端末について OUI、生存時間を見ていきます。
「APでない」ことの判定には、そのアドレスから Beacon または Probe Response の送信が通しでなかったことを判断基準としています。

//image[c90-d3/uniq_sta_oui_histogram_10][C90 3日目: 端末全体のユニークOUI数 (x=ベンダ名, y=端末数)][scale=0.6]
//image[conf2016/uniq_sta_oui_histogram_10][カンファレンス: 端末全体のユニークOUI数 (x=ベンダ名, y=端末数)][scale=0.6]
//image[office2016/uniq_sta_oui_histogram_10][オフィス: 端末全体のユニークOUI数 (x=ベンダ名, y=端末数)][scale=0.6]

全体的にベンダが不明な端末が目立ちます。
これはいわゆるMAC Address Randomization が有効になった端末が増えたからではないか
と推測しています。
一時アドレスだけのランダム化なのかそれとも接続と通信までもやってしまっているのか
次第で「ベンダ不明」という事象を切り分けていく大変さが変わってきます。
ここではひとまず大半が一時アドレスのランダム化のみである、という仮説に基づいて
クライアント端末の生存時間を3種類のヒストグラムに分けて見てみます。
ここでは、カンファレンス環境を対象にしています。

1つ目(@<img>{conf2016/sta_wo_ap_recognized_span})は、端末全体の生存時間を見たものです。
2つ目(@<img>{conf2016/sta_wo_ap_recognized_span_unknown})は、見えた端末のうち
OUIからベンダ名が引けなかった端末のみの生存時間分布です。
最後に3つ目(@<img>{conf2016/sta_wo_ap_recognized_span_known})は、見えた端末のうち
ベンダ名が引けた端末の生存時間をプロットしたものです。
大半のベンダ名が不明なクライアント端末は一時的にしか見えなかったアドレスであり、
ベンダ名が判明している端末は比較的長時間使われているという傾向があります。
ただ通りがかったデバイスがたまたまベンダ名不明でかつユニークに 9000 個程度確認された、
という可能性を否定するものではないですがおおよそそれっぽい分布ではあります。

//image[conf2016/sta_wo_ap_recognized_span][カンファレンス: クライアント端末全体の生存期間 (x=秒, y=端末数)][scale=0.6]
//image[conf2016/sta_wo_ap_recognized_span_unknown][カンファレンス: クライアント端末(ベンダ名不明)の生存期間 (x=秒, y=端末数)][scale=0.6]
//image[conf2016/sta_wo_ap_recognized_span_known][カンファレンス: クライアント端末(ベンダ名既知)の生存期間 (x=秒, y=端末数)][scale=0.6]

なお、ベンダ名不明アドレスのOUIは C90 の場合で 39245 種類確認されており、
うち 906 個のOUI は 2 個以上のユニークなアドレスで利用されています。
このうち905個は 2〜8 個以内なのですが、奇妙なのは 1 種類だけ
3415 個のユニークアドレスで使い回されている OUI があるという点です。
これは "DA:A1:19" (Locally Admininistrated ビットを考慮すれば
"D8:A1:19")なるOUIで、こんなに多いのであれば登録しているベンダがいてもおかしくないですが
2016/12月現在の IEEE oui.txt @<fn>{fn_oui_txt} には該当する団体がありません。
出現するのは Probe Request の送信アドレスと、Probe Response の受信アドレスです。
またこのOUIは @<table>{table_unknown_dup_oui} に記載したように
3環境の全てで同じような振る舞いをしています。
いずれかのプラットフォーム/OSに共通でこのOUIを用いる実装が入っていそうですが
具体的にどれなのかまでは追いかけきれていません。

//table[table_unknown_dup_oui][ベンダ不明な非AP OUI の分布]{
イベント名			C90 3日目	某技術イベント	某オフィス
------------
ベンダ不明アドレスのユニーク数	44429		9648		3972
ベンダ不明OUIの種類		39264		8201		2909
2回以上用いられているOUIの種類	906		82		12
OUI重複回数の範囲(DA:A1:19除く)	2〜8		2〜4		2〜4
DA:A1:19を使っているアドレス数	3415		1353		1051
//}

Reddit のとあるスレッド @<fn>{fn_unidentified_mac} では Google の OUI
であるという情報が存在しています。が、信憑性のほどは不明です。

//footnote[fn_unidentified_mac][Unidentified MAC https://www.reddit.com/r/networking/comments/465txi/unidentified_mac/]
//footnote[fn_oui_txt][http://standards-oui.ieee.org/oui.txt]

=== W58 帯

144〜165 チャネルに該当する W58 帯は、アメリカ等では無線 LAN には割当たっていますが
日本ではまだ Wi-Fi には解放されていない帯域です。
そのため、@<img>{c90-d3/channel_ap_histogram}, @<img>{conf2016/channel_ap_histogram},
@<img>{office2016/channel_ap_histogram}に挙げた 3 環境のいずれにおいても
AP は検知されていません。

ただし、クライアントは別です。海外からの参加者がいるからか、
はたまた輸入品を使っているのかは不明ですがこの帯域に一定数のクライアントが
見えています(@<img>{c90-d3/channel_sta_histogram}の右端のチャネル)。

//image[c90-d3/channel_sta_histogram][C90 3日目: チャネルごとに見えたユニークアドレス数 (x=チャネル, y=アドレス数)][scale=0.6]


=== チャネル使用率の推移

ここでは、前章で述べたチャネル使用率の記録を図示してみます(@<img>{channel_utilization_3})。
それぞれ横軸にチャネル、縦軸に時間を取り、その交点にあたるセルの濃さでその時刻でのチャネル使用率を表しています。

//image[channel_utilization_3][3環境でのチャネル使用率 (x=チャネル, y=時間, 濃さ=チャネル使用率)][scale=1.0]

#@# //image[c90-d3/c90-d3_util][C90 3日目: チャネル使用率 (x=チャネル, y=時間, 濃さ=チャネル使用率)][scale=0.8]
#@# //image[conf2016/conf2016_util][カンファレンス: チャネル使用率 (x=チャネル, y=時間, 濃さ=チャネル使用率)][scale=0.8]
#@# //image[office2016/office2016_util][オフィス: チャネル使用率 (x=チャネル, y=時間, 濃さ=チャネル使用率)][scale=0.8]

全般的に AP の数が多いところで使用率が高め(濃く)でています。
2.4 GHz帯について見ると、オフィス環境の1,6,11以外のチャネルでの乱れ具合が
少ないのが見て取れます。3,4,8,9チャネルあたりは比較的静かです。
C90 のそれは言わずもがなですが、同じぐらいのAP数がいるはずのカンファレンスは
8チャネルあたりでそれなりの使用率を記録しています。

前章でも述べた通りあくまで何かでチャネルがつかわれていることしか
この図からは分かりません。中身については別の指標を用いて
確認する必要があります。


=== デュレーション

前節のチャネル使用率をもうすこし分解するために、パケットのデュレーションフィールド
に入っている値を使ってなにか得られないかを見てみます。
このフィールドには、そのフレームが伝わってくるのにかかったであろう時間がマイクロ秒
単位でプリアンブルの時刻とともに入っています。
全てのフレームがキャプチャできるという前提を置くと、単位時間に受信したフレームの
全てのデュレーションを足し併せてチャネル使用率と比べれば802.11フレーム以外の
干渉源の影響も割り出すことができます。

実際には前章のUSB Wi-Fi アダプタの節でも述べた通り、このキャプチャ箱のハードウェア
では収集できないフレームがあったりソフトウェア的にバッファの上限でおとしたりと
完全に拾うことはできないため、あくまで部分的な情報として有用なのかを見てみます。

==== C90 3日目: 2.4GHz vs 5.2GHz 帯

ここではまず C90 3日目のデータにてチャネル使用率が継続的に高く現れている 1, 36, 48 ch の
3つを比較してみます。これらのチャネルを含む単位時間あたりに見えたフレームの
合計デュレーションをプロットした図を @<img>{c90-d3/chan_duration-24s_plot},
@<img>{c90-d3/chan_duration-52_plot} に記載します。なお、特に言及しないかぎり
FCSが正常なフレームのみを対象としています。

//image[c90-d3/chan_duration-24s_plot][C90 3日目: 2.4GHz帯, 単位時間あたりの合計デュレーション推移 (x=時間, y=マイクロ秒)][scale=0.8]
//image[c90-d3/chan_duration-52_plot][C90 3日目: 5.2GHz帯, 単位時間あたりの合計デュレーション推移 (x=時間, y=マイクロ秒)][scale=0.8]

2.4GHz帯は 200ミリ秒程度、対する5.2GHz帯は300-400ミリ秒程度の
デュレーションで推移しており、後者の方が時間を多く使用しているようです。
チャネル使用率は3チャネルでだいたい同じであったはずです。36と48チャネルのそれがおおよそ一致した
推移なのは良いとして、1チャネルだけが低いのは不思議です。

5GHz帯で低めにでている40, 44チャネルは最大でも100ms以下程度で推移しており、これは36や48チャネルの 1/4 以下程度に相当します。
実際に40チャネルの使用率を見てみると、この最大近辺で15〜22%となっておりたしかに 1/4 程度であることから
およそチャネル使用率に比例する関係にあるとみてもよさそうなものです。
この 400ms との差分がいわゆる、Bluetooth や隣接するチャネルなど干渉する電波源により
受けた影響の度合いに相当するのかどうかについては別の検証が必要そうです。


ひとまずこういったペナルティを2.4GHz帯側ではうけているのかもしれない、と踏まえた上で
次はデータフレームについて見てみましょう。@<img>{c90-d3/chan_duration-24s-r4_plot}と
@<img>{c90-d3/chan_duration-52-r4_plot}は、先の合計デュレーションから
データフレームのみの合計デュレーションを抜き出したものです。
2.4GHz帯が著しく低いのが見て取れます。特に先の全体の合計デュレーションと比較すると
5GHz帯はデータフレームの割合が高いにもかかわらず、2.4GHz帯はほぼ下に張り付いてしまっています。
同じようなチャネル使用率でも実際のデータに帯域を使えているかというと
このように内情が違うようです。

//image[c90-d3/chan_duration-24s-r4_plot][C90 3日目: 2.4GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]
//image[c90-d3/chan_duration-52-r4_plot][C90 3日目: 5.2GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]

なお、FCSエラーが多すぎてフレームが壊れているがためにこうなっているかというとそうではなく
キャプチャデータにおけるFCSエラー率はどちらの帯域でも20%程度を推移しています
(@<img>{c90-d3/chan_fcs_error_rate-24s_plot}, @<img>{c90-d3/chan_fcs_error_rate-52_plot})。
5GHz帯のあまり使われていない方のチャネル(40, 44)がFCSエラー率低めであることから、
この指標はいずれの周波数帯でも共通にフレーム数が多ければ上がる程度にしか意味がないのかもしれません。

//image[c90-d3/chan_fcs_error_rate-24s_plot][C90 3日目: 2.4GHz帯, 単位時間あたりのFCSエラーフレームの割合率 (x=時間, y=割合)][scale=0.8]
//image[c90-d3/chan_fcs_error_rate-52_plot][C90 3日目: 5.2Hz帯, 単位時間あたりのFCSエラーフレームの割合数 (x=時間, y=割合)][scale=0.8]

対比のため2.4GHz帯でより正常に利用できていた環境としてカンファレンス環境における
合計デュレーション(@<img>{conf2016/chan_duration-24s_plot})
とデータのみの合計デュレーション(@<img>{conf2016/chan_duration-24s-r4_plot})のグラフを見てみましょう。
全体的にC90 のそれと異なり、時間ごとにデュレーションが揺れているのが見て取れます。
この中で、16:00〜17:00あたりではデータの合計デュレーションが特徴的に高い値を維持し
全体のデュレーションに追いすがっています。その他の指標(フレーム数や伝送バイト数など)においても
同様の傾向を示しており、ユーザからのトラフィックの要求にたいして適切に帯域を提供できていると
このようにトラフィックに応じたデュレーションの変動も見られるようです。

//image[conf2016/chan_duration-24s_plot][カンファレンス: 2.4GHz帯, 単位時間あたりの合計デュレーション推移 (x=時間, y=マイクロ秒)][scale=0.8]
//image[conf2016/chan_duration-24s-r4_plot][カンファレンス: 2.4GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]


#@# ==== C90 3日目とオフィス環境の比較 : 5.2GHz帯
#@# 
#@# この節では、前節であげた 5.2GHz帯と同じ周波数帯で別環境(某オフィス環境)のデータと比較をしてみます。
#@# 前節では同一環境での2.4GHz帯と5GHz帯との比較を行い、2.4GHz帯と5GHz帯ではだいぶ落差が激しそうな
#@# ことが分かりました。環境間で、5GHz帯でも同様の事象が見られるのかを見ていきます。
#@# 
#@# 
#@# まずは単位時間あたりの合計デュレーション(@<img>{office2016/chan_duration-52_plot})です。
#@# @<img>{c90-d3/chan_duration-52_plot}と比較するとやはりC90が時間消費多めになっています。
#@# 一方データフレームのデュレーションを描画してみると@<img>{office2016/chan_duration-52-r4_plot}
#@# に挙げたような推移を示します。C90 3日目と同じく、全体の半分程度の時間を
#@# データフレームのデュレーションとして利用しているようです。
#@# ある程度使われていたWi-Fi環境はこのような傾向を示すのかもしれません。
#@# 
#@# //image[office2016/chan_duration-52_plot][オフィス: 5.2GHz帯, 単位時間あたりの合計デュレーション推移 (x=時間, y=マイクロ秒)][scale=0.8]
#@# 
#@# //image[office2016/chan_duration-52-r4_plot][オフィス: 5.2GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]
#@# 
#@# この傾向で見たとき、特徴的なのはカンファレンスでの 2.4GHz帯における合計デュレーション(@<img>{conf2016/chan_duration-24s_plot})
#@# とデータのみの合計デュレーション(@<img>{conf2016/chan_duration-24s-r4_plot})のグラフです。
#@# 全体的にC90 のそれと異なり、時間ごとにデュレーションが揺れているのが見て取れます。
#@# この中で、16:00〜17:00あたりではデータの合計デュレーションが特徴的に上昇を維持し
#@# 全体のデュレーションに追いすがっています。その他の指標(フレーム数や伝送バイト数など)においても
#@# 同様の傾向を示しており、ユーザからのトラフィックの要求にたいして適切に帯域を提供できていた
#@# 痕跡としてみても良さそうです。
#@# 
#@# //image[conf2016/chan_duration-24s_plot][カンファレンス: 2.4GHz帯, 単位時間あたりの合計デュレーション推移 (x=時間, y=マイクロ秒)][scale=0.8]
#@# //image[conf2016/chan_duration-24s-r4_plot][カンファレンス: 2.4GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]



#@# ここから先はobsoleteだよ


#@# 
#@# 
#@# 2.4GHz帯にはよく言われているようなペナルティがありこれがきっと影響しているのであろう
#@# とひとまず置いておき、
#@# としておいて
#@# 
#@# AP
#@# これが、いわゆる Bluetooth や
#@# 
#@# @<img>{c90-d3/chan_duration-24s-r3_hist}と@<img>{c90-d3/chan_duration-24s-r3_hist}
#@# では1秒あたりの消費率の分布をヒストグラムとしています。
#@# 2.4GHz帯では3チャネルに共通して 20% にそろっています。
#@# 5.2GHz帯はそれに比べればチャネルごとに二分化されています。
#@# 利用率の高いチャネル(36, 48)は 40% あたりを頂上として 20-60% の範囲で裾野を広げています。
#@# 相対的にあまりアクティビティの目立たないチャネル(40, 44)は 5% あたりに集中しています。
#@# 
#@# //image[c90-d3/chan_duration-24s-r3_hist][C90 3日目: 2.4GHz帯, 時間消費率のヒストグラム (x=割合, y=頻度)][scale=0.8]
#@# //image[c90-d3/chan_duration-52-r3_hist][C90 3日目: 5.2GHz帯, 時間消費率のヒストグラム (x=割合, y=頻度)][scale=0.8]
#@# 
#@# 次にデータフレームのデュレーションにのみ着目してみましょう。
#@# @<img>{c90-d3/chan_duration-24s-r4_plot}の2.4GHz帯のグラフでは, 基本的には0にはりついており時折一時的に
#@# デュレーションが上がります。一方、@<img>{c90-d3/chan_duration-52-r4_plot}の5.2GHz帯では, 200ms を中心として
#@# 100-350msの幅でぶれています。
#@# 
#@# //image[c90-d3/chan_duration-24s-r4_plot][C90 3日目: 2.4GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]
#@# //image[c90-d3/chan_duration-52-r4_plot][C90 3日目: 5.2GHz帯, 単位時間あたりの合計デュレーション推移, データフレームのみ (x=時間, y=マイクロ秒)][scale=0.8]
#@# 
#@# これらの時間が長い場合、チャネル使用率の大半をデータフレームに割り当てられている証拠となります。
#@# ただしデータフレームに関しては、長く時間を消費すればいいというものではありません。
#@# というのは高レートになればなるほど早く送信でき、その結果デュレーションが短くなるはずだからです。
#@# きっと短い時間で2.4GHz帯は頑張ってるはず、と信じて単位時間あたりのフレーム数を
#@# 比べてみるとまぁそんなことはありません。
#@# 
#@# //image[c90-d3/chan_data_n_ba_frame_rate-24s-r5_plot][C90 3日目: 2.4GHz帯, 単位時間あたりのデータフレーム数 (x=時間, y=フレーム数)][scale=0.8]
#@# //image[c90-d3/chan_data_n_ba_frame_rate-52-r5_plot][C90 3日目: 5.2GHz帯, 単位時間あたりのデータフレーム数 (x=時間, y=フレーム数)][scale=0.8]
#@# 
#@# 単位時間あたりにデータフレームが消費している時間のヒストグラムを
#@# それぞれ@<img>{c90-d3/chan_duration-24s-r5_hist}, @<img>{c90-d3/chan_duration-52-r5_hist}に記載します。
#@# 改めて@<img>{c90-d3/chan_duration-24s-r3_hist}や@<img>{c90-d3/chan_duration-52-r3_hist}に挙げた
#@# 全フレーム(ManagementやControlフレーム含む)の現れ方に比してみると、やはり2.4GHz帯でのデータフレームの
#@# 現れ方が低すぎるという問題がありそうです。この差分はおそらくManagementフレームなど低速なデータレートの
#@# フレームで埋まっていると思われます。データ転送でだらだら時間を過剰に消費しているのも問題ではありますが、
#@# 他のタイプと比してあまりに割合が少なすぎるというのも不健全なのかもしれません。
#@# 
#@# //image[c90-d3/chan_duration-24s-r5_hist][C90 3日目: 2.4GHz帯, 時間消費率のヒストグラム, データフレーム (x=割合, y=頻度)][scale=0.8]
#@# //image[c90-d3/chan_duration-52-r5_hist][C90 3日目: 5.2GHz帯, 時間消費率のヒストグラム, データフレーム (x=割合, y=頻度)][scale=0.8]
#@# 
#@# そもそも全体的に2.4GHz帯のフレーム数(FPS)が少ないというのが背景にあるようです。
#@# 比較のために単位時間あたりに取得できた正常なフレーム数の比較を
#@# @<img>{c90-d3/chan_goodfcs_frame_count-24s_plot} と @<img>{c90-d3/chan_goodfcs_frame_count-52_plot}で見てみます。
#@# およそ7倍程度の開きがあるようです。
#@# 
#@# //image[c90-d3/chan_goodfcs_frame_count-24s_plot][C90 3日目: 2.4GHz帯, 単位時間あたりのフレーム数(FCS goodのみ) (x=時間, y=フレーム数)][scale=0.8]
#@# //image[c90-d3/chan_goodfcs_frame_count-52_plot][C90 3日目: 5.2Hz帯, 単位時間あたりのフレーム数(FCS goodのみ) (x=時間, y=フレーム数)][scale=0.8]
#@# 
#@# これが FCSエラー率が高すぎるからなのかを見るために、 単位時間あたりのFCSエラー率の推移を見てみます。
#@# 2.4GHz帯(@<img>{c90-d3/chan_fcs_error_rate-24s_plot})と5GHz(@<img>{c90-d3/chan_fcs_error_rate-52_plot})とでグラフを比べると
#@# 1,6,11チャネルと36,48チャネルとでともに20%あたりを推移していることが見て取れます。
#@# 2.4GHz帯がそこまで過剰に大きくないため、FCSエラーでフレームが過小にしか拾えていないのではなく
#@# それ以前の問題として送信できていないなどの可能性についても検証が必要なのかもしれません。
#@# 
#@# //image[c90-d3/chan_fcs_error_rate-24s_plot][C90 3日目: 2.4GHz帯, 単位時間あたりのFCSエラーフレームの割合率 (x=時間, y=割合)][scale=0.8]
#@# //image[c90-d3/chan_fcs_error_rate-52_plot][C90 3日目: 5.2Hz帯, 単位時間あたりのFCSエラーフレームの割合数 (x=時間, y=割合)][scale=0.8]
#@# 
#@# ==== C90 3日目とオフィス環境の比較 : 5.2GHz帯
#@# 
#@# 前節では同一環境での2.4GHz帯と5GHz帯との比較を行いました。
#@# この節では、前節であげた 5.2GHz帯と同じ周波数帯で別環境(某オフィス環境)のデータと比較をしてみます。
#@# まずは単位時間あたりの合計デュレーション(@<img>{office2016/chan_duration-52_plot})です。
#@# @<img>{c90-d3/chan_duration-52_plot}と比較するとやはりC90が時間消費多めになっています。
#@# オフィス環境は、200msあたりにでている44チャネルを中心に推移しています
#@# 
#@# #@# channel_sta_data_wo_ap_histogram.png の差
#@# 
#@# //image[office2016/chan_duration-52_plot][オフィス: 5.2GHz帯, 単位時間あたりの合計デュレーション推移 (x=時間, y=マイクロ秒)][scale=0.8]

#@# 52-r3_hist
#@#   - oが左より、で散発的
#@#   - 36が15ぐらいと30ぐらいで山二つ -> 52s_plotで揺れてるとこうなる？
#@#   - 44も20ぐらいと5ぐらい

#@# 時間消費量のヒストグラム(@<img>{office2016/chan_duration-52-r3_hist})で見ても、
#@# C90 (@<img>{c90-d3/chan_duration-52-r3_hist})のそれに比べて左にずれています。
#@# C90 では 36チャネルは48チャネルとともに40%程度をマークしていましたが、
#@# こちらでは 15% と 30% あたりに分かれて2つの山を成しています。

#@# //image[office2016/chan_duration-52-r3_hist][オフィス: 5.2GHz帯, 時間消費率のヒストグラム (x=割合, y=頻度)][scale=0.8]


#@# 
#@# 52-r4_plot
#@#   - 傾向としては52s_plotと同じ
#@# 
#@# 52-r5_hist
#@#   - 山の位置: 36は2つ: 5と15ぐらい
#@# 
#@# chan_retry_rate-52
#@#   - c は20-40のやまがあったが
#@#   - o は0->40に落ちてく傾向
#@#    - このエラー率が安定しているというのはなにかの指標になる？
#@#    - エラー率の推移ではなく変化量の大きさ
#@# 
#@# chan_fcs_error_rate-52
#@#   - だらっとはりついてる > o
#@# 
#@# goodfcsrate-52
#@#   - 52s_plotと同じ様な傾向
#@#   - ただしmaxはoが上待っている
#@# 
#@# chan_data_n_ba_frame_rate-*-r3_plot: 全体に帯支店データフレーム非
#@#   - 36はo 10-30の揺れ激しい
#@#   - c は36, 48で20%クライデ安定
#@# 
#@# 
#@# chan_data_n_ba_frame-rate-*-r6_plot:データフレーム数
#@#   - o は750ぐらいで上げ止まるね
#@#   - c は200-300
#@# 
#@# duration-r6
#@#   - o 500KBで安定 vs c 300KB でそこそこぶれる



#@# 少ないため、これがFCSエラー率が高いからではないか
#@# この2.4GHz帯のデータフレームの少なさが, フレームが壊れたことによって起こっている可能性を検証するために
#@# キャプチャデータ中のFCSエラー率をそれぞれ 2.4GHz帯(@<img>{chan_fcs_error_rate-24s_hist.png})、
#@# 5GHz帯(@<img>{chan_fcs_error_rate-52_hist.png})で
#@# 
#@# 
#@# 
#@# #@# 1 vs 36 vs 40
#@# 
#@# 24s_plot vs 52_plot: FCSエラーでない全フレームの合計us
#@#  - 2: 200msぐらい
#@#  - 5: 300-400msぐらい
#@# 24s-r3_hist vs 52-r3_hist: 上記の補強として 1秒あたりに占める割合のヒストグラム (要らない顔?)
#@#   - 2: 20%ぐらいのやま
#@#   - 5: 40%ぐらいに36, 48の山がある
#@# 
#@# じゃあデータフレームだけにしてみよう
#@# 24s-r4_plot vs 52-r4_plot
#@#   - 2: とげとげしてるが対外0
#@#   - 5: 36, 48だけ 150m-200mのあいだ
#@# 
#@# 補強データとして、単位時間に占めるデータフレームの割合分布
#@# 24s-r5_hist vs 52s-r5_hist
#@#   - 2: 0に山
#@#   - 5: 20に頂点のある0-40の山
#@# 
#@# 何がいえるか。36, 48はデータを遅れてそう。
#@# 1 36 48 ともにチャネル使用率が70%を超えている
#@# - データフレームの分布がこんな感じに差異がある
#@#   - いくらこくてもな...
#@# 
#@# - retryとかみてないのでそこは今後の課題
#@# TBD: fcs, retryフレームレートも比較してみると....
#@# 
#@# chan_retry_rate-*s: 24sと52はそんなに変わらない？
#@#   - histも、36,48 vs 1にしぼればそこまでかわらないような
#@#     - 20-40の間に36, 48の山がある。左端は44, 40とかの列
#@#     - 24s は15あたりを頂点とする左から1つめのやま
#@# chan_fcs_error_rate-*s : 24sと52sはそんなに変わらなさそう
#@#   -  histも同様
#@# retryとfcsエラーレートの割合はたしかになんかのやくにはたつが
#@# チャネル内比較ならともかく、クロスだとそんなに使いやすさの知見にはならないっぽい？
#@# もっと単純に goodfcsframecnt のようなほうが実は当たってる？
#@#   - 24s は 200とげとげ, 52 は 2000
#@# データだけに絞るなら chan_data_n_ba_frame_rate-*-r3_plot のデータフレーム割合とか
#@#  - 24s : 0からとげとげ
#@#  - 52: 20%あたりをキープ
#@# あるいは単純な量として chan_data_n_ba_frame_rate-*-r6_plot のfpsとかが以外と普通に
#@# 参考になる?
#@# 
#@# つぎはクロスイベントでみてみよう
#@# #@# c90 vs office これは微妙なのでスルー
#@# #@# 
#@# #@# 24s_plot
#@# #@#   - c: 200ms
#@# #@#   - o: 3層に分かれている
#@# #@# 24s-r3_hist
#@# #@#   - c: 共通で20%
#@# #@#   - o: 右から1, 6, 11 ch という並び
#@# #@# 24s-r4_plot
#@# #@#   - どちらもぎざぎざ,
#@# #@# 24s-r5_hist
#@# #@#   - とひえおっつぶれるのはいっしょ
#@# #@# 24s-r6: byte/s
#@# #@#   - ただ、bpsでみるとオフィスが多め？
#@# 
#@#   c90 vs cb
#@# 24s_plot:  us all
#@#   - c: 200ms
#@#   - cb: チャネルによる、波が激しい
#@# 24s-r3_hist: all %
#@#   - c: だいたい同じ山＠20%
#@#   - cb: 40, 20, 10と1, 6, 11 の山が違う'
#@# 24s-r4_plot : data us
#@#   - c: 下は利付き
#@#   - cb: 1, 11が結構頑張ってる（16〜17時)
#@# 24s-r5_hist: data us/sec %
#@#   - histにするとあまり見えなくなるねー
#@#   - びみょうに裾野がだらだら続いているっぽいというちがいぐらい？
#@# 24s-r6: byte/s
#@#   - やっぱりプロットすると結構な差がある
#@# 
#@# chan_retry_rate-24s:
#@#   - 若干c90の方が高めだが, cbも10-30の枠でぶれており
#@#   - histも幅広いけどそんなに変わらない？
#@#   - 1chと言う括りだとそんなに
#@# 
#@# chan_fcs_erorr_rate-24s:
#@#   - こちらもそんなに？
#@#     - むしろcbの方が11, 6chが20%超ノトコロニ山があり50,60まで裾のが広がっている
#@# 
#@# goodfcsframecntはcbがややたかめ
#@# 
#@# chan_data_n_ba_frame_rate-*-r3_hist
#@#   - cbの方がデータ流輝っぽい
#@#   - 普通にこの山の位置の寄り肩で評価しても良さそう
#@#  
#@# 
#@# 
#@# 
#@# c90 vs office 52
#@# 52s_plot
#@#   - c: 安定の300m-400m
#@#   - o: 100m-200mぐらいだが、36chを除くと0に落ちるタイミング多い
#@# 
#@# 52-r3_hist
#@#   - oが左より、で散発的
#@#   - 36が15ぐらいと30ぐらいで山二つ -> 52s_plotで揺れてるとこうなる？
#@#   - 44も20ぐらいと5ぐらい
#@# 
#@# 52-r4_plot
#@#   - 傾向としては52s_plotと同じ
#@# 
#@# 52-r5_hist
#@#   - 山の位置: 36は2つ: 5と15ぐらい
#@# 
#@# chan_retry_rate-52
#@#   - c は20-40のやまがあったが
#@#   - o は0->40に落ちてく傾向
#@#    - このエラー率が安定しているというのはなにかの指標になる？
#@#    - エラー率の推移ではなく変化量の大きさ
#@# 
#@# chan_fcs_error_rate-52
#@#   - だらっとはりついてる > o
#@# 
#@# goodfcsrate-52
#@#   - 52s_plotと同じ様な傾向
#@#   - ただしmaxはoが上待っている
#@# 
#@# chan_data_n_ba_frame_rate-*-r3_plot: 全体に帯支店データフレーム非
#@#   - 36はo 10-30の揺れ激しい
#@#   - c は36, 48で20%クライデ安定
#@# 
#@# 
#@# chan_data_n_ba_frame-rate-*-r6_plot:データフレーム数
#@#   - o は750ぐらいで上げ止まるね
#@#   - c は200-300
#@# 
#@# duration-r6
#@#   - o 500KBで安定 vs c 300KB でそこそこぶれる








#@# ==== チャネル使用率と FPS
#@# 
#@# 先にあげたチャネル使用率の中見を類推するために
#@# ここでは単位時間あたりのフレーム数との
#@# 
#@# どれくらいデータフレームが流せていたのかを見るために、
#@# ここでは単位時間あたりのデータ関連のフレーム数をプロットしてみます。
#@# 混雑環境では、端末数の多さから帯域が Management フレームや RTS/CTS などで
#@# 埋まるといったことが往々にして起こります。
#@# 前節での濃さが何に起因するのかを見ていきます。
#@# 
#@# 
#@# ある程度厳密にチャネル使用率とつきあわせるのであれば、
#@# 本質的にはフレーム数や割合ではなく長さと伝送速度を考慮する必要があります。
#@# ここではあくまで単位時間あたりのフレーム数(FPS)という考えで可視化してみます。
#@# chan_data_n_ba_frame_rate-*_r3_rate : レート
#@# chan_data_n_ba_frame_rate-*-r6_plot : フレーム数


#@# ==== フレームの伝送速度の分布
#@# 
#@# 伝送速度は高ければ高いほど良いモノです。
#@# これは単純にユーザがより大容量のデータを送受信できるようになるという点もありますが、
#@# 802.11 では個々のフレームを上位の伝送速度にするほど電波の帯域を消費する時間が短い
#@# という利点があるからです。このため出来るだけ高いデータレートでフレームをやりとりしているほうが健全です。
#@# この節では、各環境でのデータレートの分布について見ていきます。
#@# なお前章でも述べたとおり、このキャプチャ箱では 802.11 2x2 MIMO 20MHz までのフレームしかキャプチャできません。
#@# そのためここで扱う範囲はこの規格以下の伝送速度のフレームに限られます。
#@# 
#@# @<img>{c90-d3/rate_histogram}, @<img>{conf2016/rate_histogram}, 
#@# @<img>{office2016/rate_histogram} は各環境での全てのフレームを
#@# 伝送速度毎にわけたヒストグラムです。
#@# 2.4 GHz 帯では 1 Mbps、5GHz 帯では 6 Mbps が Management フレーム等で利用される
#@# ベースの伝送速度となっています。このため、それぞれの環境で共通に一定の割合で
#@# 
#@# 
#@# //image[c90-d3/rate_histogram][C90 3日目: 全フレームの伝送速度分布][scale=0.7]
#@# //image[conf2016/rate_histogram][カンファレンス: 全フレームの伝送速度分布][scale=0.7]
#@# //image[office2016/rate_histogram][オフィス: 全フレームの伝送速度分布][scale=0.7]


#@# ===== チャネルごとのデータレート分布 (Dataフレームのみ)
#@# 
#@# //image[c90-d3/datarate_data_
